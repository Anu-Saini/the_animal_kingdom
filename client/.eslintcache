[{"C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\index.js":"1","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\App.js":"2","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\reportWebVitals.js":"3","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\pages\\Guess.js":"4","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\pages\\AllAnimals\\Animal.js":"5","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\pages\\Home.js":"6","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\pages\\LoginPage.jsx":"7","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\pages\\RegisterUser.jsx":"8","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\pages\\Locations.jsx":"9","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\components\\Navbar.jsx":"10","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\components\\Card.js":"11","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\utils\\Constants.js":"12","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\queries\\AnimalQuery.js":"13","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\components\\Carousel.jsx":"14","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\components\\CarouselImage.js":"15"},{"size":682,"mtime":1667027155368,"results":"16","hashOfConfig":"17"},{"size":1288,"mtime":1666826215211,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1666175323872,"results":"19","hashOfConfig":"17"},{"size":1215,"mtime":1666993942166,"results":"20","hashOfConfig":"17"},{"size":1330,"mtime":1666993942156,"results":"21","hashOfConfig":"17"},{"size":1077,"mtime":1667025302117,"results":"22","hashOfConfig":"17"},{"size":3356,"mtime":1667025502497,"results":"23","hashOfConfig":"17"},{"size":3754,"mtime":1667025530637,"results":"24","hashOfConfig":"17"},{"size":115,"mtime":1667025411840,"results":"25","hashOfConfig":"17"},{"size":1736,"mtime":1667025067240,"results":"26","hashOfConfig":"17"},{"size":670,"mtime":1666747311322,"results":"27","hashOfConfig":"17"},{"size":32,"mtime":1666705285035,"results":"28","hashOfConfig":"17"},{"size":754,"mtime":1667026309576,"results":"29","hashOfConfig":"17"},{"size":812,"mtime":1666826388192,"results":"30","hashOfConfig":"17"},{"size":647,"mtime":1667024136854,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16ni5a",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\index.js",[],"C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\App.js",[],["69","70"],"C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\reportWebVitals.js",[],"C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\pages\\Guess.js",["71","72"],"import React from \"react\";\nimport MyCarousel from \"../components/Carousel\";\nimport { QUERY_PROFILES } from \"../queries/AnimalQuery\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { CAROUSAL_LIMIT } from \"../utils/Constants\";\nimport MyCard from \"../components/Card\";\n\nconst GuessGame = () => {\n  const { loading, data } = useQuery(QUERY_PROFILES);\n  const profiles = data || [];\n  var randomAnimals = [];\n  if (!loading) {\n    \n    \n    let len = profiles.animals.length;\n   \n    let previousIndex = -1;\n    while (randomAnimals.length < 4) {\n      const randomElement = Math.floor(Math.random() * len);\n      if (previousIndex === randomElement) {\n        continue;\n      }\n      randomAnimals.push(profiles.animals[randomElement]);\n      previousIndex = randomElement;\n    }}\n  \n \nreturn(\n <main>\n        <div className=\"flex-row justify-center cardstack\">\n          <div className=\"col-12 col-md-10 my-3 cardrow\">\n            {loading ? (\n              <div>Loading...</div>\n            ) : randomAnimals.map(animals =>{\n             return (\n                <MyCard data={animals}></MyCard>\n              )\n            }) }\n          </div>\n        </div>\n      </main>\n)\n  };\n  \n\nexport default GuessGame;\n","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\pages\\AllAnimals\\Animal.js",["73","74","75","76"],"import { LikeOutlined, MessageOutlined, StarOutlined } from '@ant-design/icons';\nimport { Avatar, List, Space } from 'antd';\nimport React from 'react';\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PROFILES } from '../../queries/AnimalQuery';\nimport './Animals.css'\n\n\n\nconst IconText = ({ icon, text }) => (\n  <Space>\n    {React.createElement(icon)}\n    {text}\n  </Space>\n);\nconst AllAnimals = () => {\n  const { loading, data } = useQuery(QUERY_PROFILES);\n  if(loading)\n  {\n    return (<div> Loading.....</div>)\n  }\n  else{\n  return ( \n<div className='animal-list-container'>\n  <List\n    itemLayout=\"vertical\"\n    size=\"large\"\n   \n    dataSource={data.animals}\n\n    renderItem={(item) => (\n      <List.Item\n        key={item._id}\n        actions={[\n          <p>Typically found in {item.location.join(\", \")}</p>\n        ]}\n        extra={\n          <img\n            width={300}\n            height={300}\n            alt={item.animalName}\n            src={item.image[1]}\n          />\n          \n        }\n      >\n        <List.Item.Meta \n          avatar={<Avatar src={item.image[0]} />}\n\n          title={<a href={item.href} >{item.animalName} </a>}\n            description={item.family} \n          \n        />\n        {item.description} \n      </List.Item>\n    )}\n  />\n  </div>\n  )\n      }};\nexport default AllAnimals;","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\pages\\Home.js",[],"C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\pages\\LoginPage.jsx",["77","78","79","80"],"import { Button, Checkbox, Form, Input } from \"antd\";\nimport React, { useState } from 'react';\nimport { Col, Row } from \"antd\";\nimport \"./Pages.css\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { LOGIN_QUERY } from \"../queries/AnimalQuery\";\n\n\n\nfunction LoginPage() {\n  const [formState, setFormState] = useState({\n    login: true,\n    email: '',\n    password: '',\n    name: ''\n  });\n\n  const [login, { data, loading, error }]= useMutation(LOGIN_QUERY, {\n\n    variables: {\n      email: formState.email,\n      password: formState.password\n    }}); \n    \n   if(!loading && data)\n   {\n    console.log(data.login)\n   }\n  const checkLogin = (values) => {\n     \n  };\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  return (\n    <>\n      <Row>\n        <Col span={12}>\n          <div className=\"login-left-panel\"></div>\n        </Col>\n        <Col span={12}>\n          <Form\n            name=\"basic\"\n            labelCol={{\n              span: 8,\n            }}\n            wrapperCol={{\n              span: 16,\n            }}\n            initialValues={{\n              remember: true,\n              \n            }}\n            onFinish={login}\n            onFinishFailed={onFinishFailed}\n            \n            autoComplete=\"off\"\n          >\n            <Form.Item\n              label=\"Username\"\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your username!\",\n                },\n              ]}\n              value={formState.email}\n              onChange={(e) =>\n                setFormState({\n                  ...formState,\n                  email: e.target.value\n                })\n              }\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your password!\",\n                },\n              ]}\n              value={formState.password}\n              onChange={(e) =>\n                setFormState({\n                  ...formState,\n                  password: e.target.value\n                })\n              }\n            >\n              <Input.Password />\n            </Form.Item>\n\n            <Form.Item\n              \n              valuePropName=\"checked\"\n              wrapperCol={{\n                offset: 8,\n                span: 16,\n              }}\n            >\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n\n            <Form.Item\n              \n              valuePropName=\"checked\"\n              wrapperCol={{\n                offset: 8,\n                span: 16,\n              }}\n            ></Form.Item>\n\n            <Form.Item\n              wrapperCol={{\n                offset: 8,\n                span: 16,\n              }}\n            >\n              <Button type=\"primary\" htmlType=\"submit\" >\n                Submit\n              </Button>\n              <Button type=\"link\" htmlType=\"button\" >\n                Reset Password\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  );\n};\nexport default LoginPage;\n","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\pages\\RegisterUser.jsx",["81","82","83","84","85"],"import { Button, Checkbox, Form, Input } from 'antd';\r\nimport React , {useState} from 'react';\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { NEW_USER } from '../queries/AnimalQuery';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\n\r\nconst container = {\r\n  padding: \"20vh\"\r\n}\r\n\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst RegisterUser = (props) => {\r\n  const navigate = useNavigate();\r\n  const [formState, setFormState] = useState({\r\n    \r\n    email: '',\r\n    password: '',\r\n    userName: ''\r\n  });\r\n\r\n  const [NewUser, { data, loading, error }]= useMutation(NEW_USER, {\r\n\r\n    variables: {\r\n      userName: formState.username,\r\n      email: formState.email,\r\n      password: formState.password\r\n    }}); \r\n\r\n    if(error)\r\n    console.log(error)\r\nif(!loading && data)\r\n{\r\n  console.log(data);\r\n  navigate('/login');\r\n}\r\n\r\n  const [form] = Form.useForm();\r\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\r\n  const onFinish = (values) => {\r\n    debugger\r\n    setFormState({\r\n      ...values\r\n    });\r\n    const data ={\r\n      userName: formState.username,\r\n      email: formState.email,\r\n      password: formState.password\r\n    };\r\n    console.log(data)\r\n    NewUser();\r\n  };\r\n  const onWebsiteChange = (value) => {\r\n    if (!value) {\r\n      setAutoCompleteResult([]);\r\n    } else {\r\n      setAutoCompleteResult(['.com', '.org', '.net'].map((domain) => `${value}${domain}`));\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <div style={container}>\r\n    <Form\r\n    {...formItemLayout}\r\n    form={form}\r\n    name=\"register\"\r\n    onFinish={onFinish}\r\n    scrollToFirstError\r\n  >\r\n<Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"username\"\r\n        label=\"Name\"\r\n        rules={[{ required: true, message: 'Please input your Name!' }]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(_, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n              return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\"  htmlType=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default RegisterUser;","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\pages\\Locations.jsx",["86"],"import React, { useState } from \"react\";\n\nconst Locations = () =>(\n  <h1>Location</h1>\n);\nexport default Locations;","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\components\\Navbar.jsx",["87","88","89","90","91","92","93","94","95"],"import { Layout, Menu } from \"antd\";\nimport React, { useState } from \"react\";\nimport {Link } from 'react-router-dom';\nconst { Header, Footer, Sider, Content } = Layout;\nconst items = [\n  {\n    label: <a href=\"/\">Home</a>,\n    key: \"home\",\n  },\n  {\n    label: <a href=\"/locations\">Locations</a>, \n    key: \"maps\",\n  },\n  {\n    label: <a href=\"/allanimals\">All Animals</a>,\n    key: \"animals\",\n  },\n  {\n    label: <a href=\"/guess\">Guess the Animal</a>,\n    key: \"game\",\n  },\n  {\n    label: (<a href=\"/login\">login</a>),\n    key: \"login\",\n  },\n  <Link to =\"/locations\">Locations</Link>\n  \n];\n\nconst Navbar = () => {\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n \n  const [current, setCurrent] = useState(\"mail\");\n  const onClick = (e) => {\n    setCurrent(e.key);\n    switch (e.key) {\n      case \"login\": {\n        setIsModalOpen(true);\n        break;\n      }\n      case \"game\":\n        {\n          \n          break;\n        }\n\n    }\n  };\n  return (\n    <>\n<Link to =\"/locations\">Locations</Link>\n<Menu\n            onClick={onClick}\n            selectedKeys={[current]}\n            items={items}\n            mode=\"horizontal\"\n          />\n      {/* <Layout>\n        <Content>\n         \n        \n          \n        </Content>\n\n        <Sider>\n          <RightMenu />\n        </Sider>\n        <Sider></Sider>\n      </Layout>\n\n      <Modal\n        title=\"Basic Modal\"\n        open={isModalOpen}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <LoginPage></LoginPage>\n      </Modal> */}\n    </>\n  );\n};\nexport default Navbar;\n","C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\components\\Card.js",[],"C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\utils\\Constants.js",[],"C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\queries\\AnimalQuery.js",[],"C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\components\\Carousel.jsx",[],"C:\\Users\\SAINI\\Desktop\\newProjectMonash\\client\\src\\components\\CarouselImage.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":18},{"ruleId":"100","severity":1,"message":"104","line":6,"column":10,"nodeType":"102","messageId":"103","endLine":6,"endColumn":24},{"ruleId":"100","severity":1,"message":"105","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":22},{"ruleId":"100","severity":1,"message":"106","line":1,"column":24,"nodeType":"102","messageId":"103","endLine":1,"endColumn":39},{"ruleId":"100","severity":1,"message":"107","line":1,"column":41,"nodeType":"102","messageId":"103","endLine":1,"endColumn":53},{"ruleId":"100","severity":1,"message":"108","line":10,"column":7,"nodeType":"102","messageId":"103","endLine":10,"endColumn":15},{"ruleId":"100","severity":1,"message":"109","line":5,"column":23,"nodeType":"102","messageId":"103","endLine":5,"endColumn":31},{"ruleId":"100","severity":1,"message":"110","line":18,"column":34,"nodeType":"102","messageId":"103","endLine":18,"endColumn":39},{"ruleId":"100","severity":1,"message":"111","line":29,"column":9,"nodeType":"102","messageId":"103","endLine":29,"endColumn":19},{"ruleId":"100","severity":1,"message":"112","line":32,"column":9,"nodeType":"102","messageId":"103","endLine":32,"endColumn":17},{"ruleId":"100","severity":1,"message":"113","line":1,"column":18,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"109","line":3,"column":23,"nodeType":"102","messageId":"103","endLine":3,"endColumn":31},{"ruleId":"100","severity":1,"message":"114","line":69,"column":10,"nodeType":"102","messageId":"103","endLine":69,"endColumn":28},{"ruleId":"100","severity":1,"message":"115","line":83,"column":9,"nodeType":"102","messageId":"103","endLine":83,"endColumn":24},{"ruleId":"100","severity":1,"message":"116","line":91,"column":9,"nodeType":"102","messageId":"103","endLine":91,"endColumn":23},{"ruleId":"100","severity":1,"message":"117","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"100","severity":1,"message":"118","line":4,"column":9,"nodeType":"102","messageId":"103","endLine":4,"endColumn":15},{"ruleId":"100","severity":1,"message":"119","line":4,"column":17,"nodeType":"102","messageId":"103","endLine":4,"endColumn":23},{"ruleId":"100","severity":1,"message":"120","line":4,"column":25,"nodeType":"102","messageId":"103","endLine":4,"endColumn":30},{"ruleId":"100","severity":1,"message":"121","line":4,"column":32,"nodeType":"102","messageId":"103","endLine":4,"endColumn":39},{"ruleId":"100","severity":1,"message":"122","line":32,"column":10,"nodeType":"102","messageId":"103","endLine":32,"endColumn":21},{"ruleId":"100","severity":1,"message":"123","line":33,"column":9,"nodeType":"102","messageId":"103","endLine":33,"endColumn":18},{"ruleId":"100","severity":1,"message":"124","line":36,"column":9,"nodeType":"102","messageId":"103","endLine":36,"endColumn":17},{"ruleId":"100","severity":1,"message":"125","line":39,"column":9,"nodeType":"102","messageId":"103","endLine":39,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":46,"column":5,"nodeType":"128","messageId":"129","endLine":57,"endColumn":6},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'MyCarousel' is defined but never used.","Identifier","unusedVar","'CAROUSAL_LIMIT' is defined but never used.","'LikeOutlined' is defined but never used.","'MessageOutlined' is defined but never used.","'StarOutlined' is defined but never used.","'IconText' is assigned a value but never used.","'useQuery' is defined but never used.","'error' is assigned a value but never used.","'checkLogin' is assigned a value but never used.","'onFinish' is assigned a value but never used.","'Checkbox' is defined but never used.","'autoCompleteResult' is assigned a value but never used.","'onWebsiteChange' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","'useState' is defined but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'Content' is assigned a value but never used.","'isModalOpen' is assigned a value but never used.","'showModal' is assigned a value but never used.","'handleOk' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]